name: "Pullrequest Check"
on:
  pull_request:
    branches: [ develop, master ]
  pull_request_target:
    branches: [ develop, master ]
  workflow_dispatch:

jobs:
  prepare:
    if: ${{ (github.event_name == 'pull_request_target' && github.actor == 'dependabot[bot]') || (github.event_name == 'pull_request' && github.actor != 'dependabot[bot]') }}
    runs-on: ubuntu-latest

    outputs:
      DATE: ${{ steps.version.outputs.DATE }}
      APP_VERSION: ${{ steps.version.outputs.APP_VERSION }}
      BUILD_DATE: ${{ steps.version.outputs.BUILD_DATE }}
      BUILD_VERSION: ${{ steps.version.outputs.BUILD_VERSION }}
      SHORT_REF: ${{ steps.version.outputs.SHORT_REF }}

    steps:
      - name: Checkout Repository
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
          
      - name: Checkout Repository
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'

      - name: Create version informations
        id: version
        run: |
          date_formatted=$(date +'%Y%m%d%H%M%S')
          build_date=$(date '+%Y-%m-%d %H:%M:%S')
          app_version=`dotnet-gitversion /output json /showvariable NuGetVersion`
          echo "::set-output name=DATE::${date_formatted}"
          echo "::set-output name=APP_VERSION::${app_version}"
          echo "::set-output name=BUILD_DATE::${build_date}"
          echo "::set-output name=BUILD_VERSION::${app_version}-${GITHUB_RUN_NUMBER}.${GITHUB_SHA:0:8}"
          echo "::set-output name=SHORT_REF::${GITHUB_REF#refs/*/}"

  build-amd64:
    runs-on: ubuntu-latest
    needs: prepare

    permissions:
      contents: read
      packages: read

    steps:
      - name: Checkout Repository
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Checkout Repository
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'
      - uses: actions/setup-node@v2
        with:
          node-version: '15'

      - name: "restore packages"
        run: dotnet restore

      - name: "build amd64"
        run: |
          dotnet publish src/PiWol.WebApp/PiWol.WebApp.csproj -c release -r linux-x64 -o ./publish-amd64/publish


  build-arm:
    runs-on: ubuntu-latest
    needs: prepare

    steps:
      - name: Checkout Repository
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Checkout Repository
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'
      - uses: actions/setup-node@v2
        with:
          node-version: '15'

      - name: "restore packages"
        run: dotnet restore

      - name: "build arm"
        run: |
          dotnet publish src/PiWol.WebApp/PiWol.WebApp.csproj -c release -r linux-arm -o ./publish-arm/publish

  test-amd64:
    runs-on: ubuntu-latest
    needs: [ prepare, build-arm, build-amd64 ]
    steps:
      - name: Checkout Repository
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Checkout Repository
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'
      - uses: actions/setup-node@v2
        with:
          node-version: '15'

      - name: "restore packages"
        run: dotnet restore

      - name: "test amd64"
        run: |
          dotnet test -r ./test-results --logger:trx

  auto-merge:
    runs-on: ubuntu-latest
    needs: [ prepare, test-amd64 ]
    if: ${{ github.actor == 'dependabot[bot]' }}
    steps:
      - uses: actions/checkout@v2
      - uses: ahmadnassri/action-dependabot-auto-merge@v2
        with:
          target: all
          github-token: ${{ secrets.DEPENDABOT_TOKEN }}